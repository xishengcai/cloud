---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: cloud
    app.kubernetes.io/name: cloud
  name: cloud
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: cloud
      app.kubernetes.io/name: cloud
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: cloud
        app.kubernetes.io/name: cloud
    spec:
      containers:
        - image: xishengcai/cloud
          imagePullPolicy: Always
          name: cloud
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 50Mi
          volumeMounts:
            - mountPath: /opt/conf/config.yaml
              name: config
              subPath: config.yaml
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: config.yaml
                path: config.yaml
            name: cloud
          name: config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: dashboard
    app.kubernetes.io/name: dashboard
  name: dashboard
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: dashboard
      app.kubernetes.io/name: dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: dashboard
        app.kubernetes.io/name: dashboard
    spec:
      containers:
        - image: xishengcai/devops-dashboard
          imagePullPolicy: Always
          name: dashboard
          ports:
            - containerPort: 80
              protocol: TCP
              name: http
              hostPort: 80
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - image: redis
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
  namespace: devops
spec:
  ports:
    - name: http
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app: redis
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cloud
  namespace: devops
data:
  config.yaml: |-
    title: cloud
    releaseEnv: local
    version: "latest"
    server:
      local:
        cloud:
          port: 80
          readTimeout: 60
          writeTimeout: 60
          runMode: debug
        redis:
          host: redis
          port: 6379
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
  labels:
    k8s-app: cloud
  name: cloud
  namespace: devops
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: h2
      port: 443
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/instance: cloud
    app.kubernetes.io/name: cloud
  sessionAffinity: None
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
  labels:
    k8s-app: dashboard
  name: dashboard
  namespace: devops
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: h2
      port: 443
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/instance: dashboard
    app.kubernetes.io/name: dashboard
  sessionAffinity: None
  type: NodePort
